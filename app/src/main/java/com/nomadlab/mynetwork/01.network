
네트워크 : 통신

dataBase <-----> Server <-----> Client(app, web,..)
  글                                 A
  댓글                               B

Local DataBase  의 한계

- 동기화가 어렵다 (핸드폰, 태블릿)
- 상호작용이 불가능하다 (댓글 - 사용자, 남의 데이터를 볼 수 없다)


서버와 통신하는 방법
 - 해당 url(uri)로 요청한다
 - 인증정보를 보낸다.
 - Json 형식을 사용해서 data 를 보낸다.

// 참고 url : http://mellowcode.org/json/students
// http://throughkim.kr/2017/03/14/Jwt/
// JavaScript Object Notation -> JavaScript 에서 객체를 만들 때 사용하는 표현식이다.

JSON 형식
- [] -> List , 배열
- {} -> 객체

JSON Response
[
    {
        "userId": 1,
        "id": 1,
        "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
        "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
    },
    {
        "userId": 1,
        "id": 2,
        "title": "qui est esse",
        "body": "est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla"
    }
]

Json Parsing
 -> Json 을 코틀린이나 자바가 이해할 수 있게 변형 하는 과정

이과정에서 필요한 부분
Serializable (직렬화)
-> 자바 시스템 내부에서 사용할 수 있도록 byte 형태로 데이터를 변경하는 것






